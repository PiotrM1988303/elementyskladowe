* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    height: 100vh;
    font-family: 'Ubuntu', sans-serif;
    background-color: #333;
    overflow: hidden;
}

button{position: relative;
margin: 20px;
padding: 20px 50px;
background: none;
// wyłączyłem domyślny kolor button
border: 1px solid white;
border-radius: 8px;
color: white;
font-size: 28px;
text-transform: uppercase;
cursor: pointer;
overflow: hidden;
// hidden pozwala schować wyciekaljące elementy pseudoelementów before i after
}

button::after, button::before{
    display: block;
    // pseudoelementy mają być wyświetlane blokowo i pozycjonowane względem relative button
    position: absolute;
    content: "";
    transition: 0.3s;
    // transition określa czas prejazdu kresek pioziomych i pionowych
    z-index: -1;
    // z index ma być na samym dole , by nie przykrywać rozmiarowo button
}
// jeśli właściwości będą przekracza button to mają być ukryte}

// ponieważ w przypadku pseudoelementów before i after zastosowano absolute,które wyjmuje ze struktury html, należey zastosować podanie szerokości i wysokości
.slide{
 width: 140px;
 height: 95px;   
}

.slide::after{
    height: 100%;
    top: 0;
    // top inforumuje, by odsunąc określoną odelgłość od góry
    left: -10px; 
    // wstępnie nie chcemy widzieć pseudoelementu więc dajemy wartość ujemną leftr
    border-left: 3px solid white;
}

.slide::before{
    width: 100%;
    // ma być po szerkości wyświetlane stąd with
    top: -10px;
    // top inforumuje, by odsunąc określoną odelgłość od góry
    left: 0; 
    // wstępnie nie chcemy widzieć pseudoelementu więc dajemy wartość ujemną top
    border-top: 3px solid white;
    // opóxnienie
    transition-delay: 0.2s;
}

// po najeżdzie na slide coś ma się dziać z afterem
.slide:hover::after{
    left: 300px;
}

.slide:hover::before{
    top: 105px;}


// środkujemy span, powyższa kombinajca pozwala na wyśrodkowanie tekstu w absolute
.span1,.span2 {
    position: absolute;
    top: 50%;
    transform: translate(-50%,-50%);
}

.span1{ left: 50%;
    transition: 0.5s;
    // aby zachować proces przesuwania, a nie znikał bezpośrednio po najeździe spanu korzystamy z transition
}
// chowamy buźke
.span2{ left: -50%;
    transition: 0.5s;
}

// chcemy aby span znikał nam po przejechaniu
.slide:hover .span1{
    left: 150%;
}
.slide:hover .span2{
    left: 50%;
}






// KOMENTARZ SLICE

.slice::before, .slice::after{
    width: 100%;
    height: 100%;
    background-color: rgb(24, 147, 230);
}

.slice::before{
    top: -50%;
    left: -100%;
}

.slice::after{
    bottom: -50%;
    right: -100%;
}

// by coś się stało z after po najechaniu stosujemy zapis
.slice:hover::after{
    right: 0;
}
.slice:hover::before{
    left: 0;
}




// hmmm 1. 50 sekunda filmiku w szkoleniu nr 3 dotyczące projektu 5. Ciekawe wejście toolsy

.hmm{
    border: none;
    transition: .5s;
}
.hmm:hover{
    box-shadow: 2px 3px 0 0 rgba(255, 255, 255, 0.8), inset 11px 6px 10px rgba(0, 0, 0, 0.2) ;
}



// border

.border{
    border-radius: 0;
    // ostre ramki
    // ramki będą się rozszerzały stąd visible
    overflow: visible;
    // tranzycja będzie na borderze stąd ustawiamy na nim transition
    transition: 0.8s;

}
// zastosowanie border transparent zamimast border none nie wpływa na rozmiar innych prycisków i się nie ruszają dzięki temu, a transparent to inaczej przezroczysty. Pozostawienie rozmiaru px nie pozwala na ruszanie
.border:hover{
    color: #13bb4b;
    border: 1px solid transparent;
}


.border::before, .border::after{
    width: 100%;
    height: 100%;
}

.border::before{
    top: 0;
    left: 0;
}
.border::after{
    bottom: 0;
    right: 0;
}

.border:hover::after{
    bottom: -10px;
    right: -10px;
    border-bottom: 5px solid #13bb4b;
    border-right: 5px solid #13bb4b;
}

.border:hover::before{
    top: -10px;
    left: -10px;
    border-top: 5px solid #13bb4b;
    border-left: 5px solid #13bb4b;
}










// glass
.glass::before{
    width: 100%;
    height: 240%;
    top: -35px;
    left: -150%;
    background-image: linear-gradient(-90deg, rgba(255, 255, 255, 0.3),  rgba(255, 255, 255, 0));
// odwrócony gradient
transform: rotate(20deg);
// ponieważ po przekręceniu byłby brzydki efekt to podciągamy top na minusową wartość. Left z kolei chowamy dlatego tatka wartośćt
// ale lepiej zwiększyć wysokość do 120%
}
.glass:hover::before{
    left: 140%;
}